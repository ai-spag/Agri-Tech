// contracts/token_sales/src/lib.rs
use anchor_lang::prelude::*;

declare_id!("T0k3nCropSales111111111111111111111111111111111");

#[program]
pub mod token_sales {
    use super::*;

    pub fn initialize_market(ctx: Context<InitializeMarket>, price_per_unit: u64) -> Result<()> {
        let market = &mut ctx.accounts.market;
        market.price_per_unit = price_per_unit;
        market.total_sold = 0;
        Ok(())
    }

    pub fn buy_crop(ctx: Context<BuyCrop>, units: u64) -> Result<()> {
        let market = &mut ctx.accounts.market;
        market.total_sold += units;
        // Token transfers to be added here.
        Ok(())
    }
}

#[derive(Accounts)]
pub struct InitializeMarket<'info> {
    #[account(init, payer = user, space = 8 + 8 + 8)]
    pub market: Account<'info, CropMarket>,
    #[account(mut)]
    pub user: Signer<'info>,
    pub system_program: Program<'info, System>,
}

#[derive(Accounts)]
pub struct BuyCrop<'info> {
    #[account(mut)]
    pub market: Account<'info, CropMarket>,
}

#[account]
pub struct CropMarket {
    pub price_per_unit: u64,
    pub total_sold: u64,
}
