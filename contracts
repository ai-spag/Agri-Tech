// Root directory of the Agri-Tech Pioneer project
// Below is a basic structure with representative Rust-based Solana smart contract (Anchor framework) examples.

/* contracts/vertical_farm.rs */
use anchor_lang::prelude::*;

#[program]
pub mod vertical_farm {
    use super::*;

    pub fn initialize_farm(ctx: Context<InitializeFarm>, farm_name: String) -> Result<()> {
        let farm = &mut ctx.accounts.farm;
        farm.name = farm_name;
        farm.manager = *ctx.accounts.manager.key;
        Ok(())
    }

    pub fn log_crop_data(ctx: Context<LogCropData>, crop_type: String, weight_kg: u32) -> Result<()> {
        let crop = &mut ctx.accounts.crop;
        crop.crop_type = crop_type;
        crop.weight_kg = weight_kg;
        crop.timestamp = Clock::get()?.unix_timestamp;
        Ok(())
    }
}

#[derive(Accounts)]
pub struct InitializeFarm<'info> {
    #[account(init, payer = manager, space = 8 + 64)]
    pub farm: Account<'info, Farm>,
    #[account(mut)]
    pub manager: Signer<'info>,
    pub system_program: Program<'info, System>,
}

#[derive(Accounts)]
pub struct LogCropData<'info> {
    #[account(init, payer = user, space = 8 + 64)]
    pub crop: Account<'info, CropLog>,
    #[account(mut)]
    pub user: Signer<'info>,
    pub system_program: Program<'info, System>,
}

#[account]
pub struct Farm {
    pub name: String,
    pub manager: Pubkey,
}

#[account]
pub struct CropLog {
    pub crop_type: String,
    pub weight_kg: u32,
    pub timestamp: i64,
}
